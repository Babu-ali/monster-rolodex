{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","width","height","monster","name","email","CardList","monsters","map","id","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","console","log","users","this","setState","filteredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","e","target","value","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"22IAGaA,EAAO,SAAAC,GAAK,OACxB,sBAAKC,UAAU,iBAAf,UACI,qBACAC,IAAI,UACJC,IAAI,aACJC,MAAM,MACNC,OAAO,QAEP,6BAAKL,EAAMM,QAAQC,OACnB,4BAAIP,EAAMM,QAAQE,YCRVC,EAAW,SAAAT,GAAK,OAC5B,qBAAKC,UAAU,YAAf,SACGD,EAAMU,SAASC,KAAI,SAAAL,GAAO,OAC1B,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQM,UCJVC,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBACId,UAAU,SACVe,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCoCHG,E,kDArCb,aAAc,IAAD,8BACX,gBAEKC,MAAO,CACVT,SAAU,GACVU,YAAa,IALJ,E,qDASf,WAIEC,QAAQC,IAAIC,GACZC,KAAKC,SAAS,CAACf,SAAWa,M,oBAG1B,WAAS,IAAD,OACN,EAAkCC,KAAKL,MAA/BT,EAAR,EAAQA,SAAUU,EAAlB,EAAkBA,YACZM,EAAmBhB,EAASiB,QAAO,SAAArB,GAAO,OAC9CA,EAAQC,KAAKqB,cAAcC,SAAST,EAAYU,wBAGlD,OACE,sBAAK7B,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CACAa,YAAY,iBACZC,aAAc,SAAAgB,GAAC,OAAI,EAAKN,SAAS,CAACL,YAAeW,EAAEC,OAAOC,WAE1D,cAAC,EAAD,CAAUvB,SAAUgB,W,GA/BVQ,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAMjDZ,M","file":"static/js/main.98d5b5a0.chunk.js","sourcesContent":["import React from 'react';\nimport './card.styles.css';\n\nexport const Card = props => (\n <div className='card-container'>\n     <img\n     alt=\"monster\"\n     src=\"./robo.png\"\n     width=\"180\"\n     height=\"180\"\n     />\n     <h2>{props.monster.name}</h2>\n     <p>{props.monster.email}</p>    \n</div>\n);","import React from 'react';\nimport './card-list.styles.css';\nimport {Card} from '../card/card.component';\n\nexport const CardList = props => (\n <div className='card-list'>{\n    props.monsters.map(monster => (\n    <Card key={monster.id} monster={monster}/>\n  )\n  )\n  }</div>\n);\n","import React from 'react'\nimport './search-box.styles.css'\n\nexport const SearchBox = ({ placeholder, handleChange }) =>(\n    <input\n        className='search'\n        type='search'\n        placeholder={placeholder}\n        onChange={handleChange}\n        />\n);","import React, {Component} from 'react';\nimport './App.css';\nimport users from './jsonData.json';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component'\n\nclass App extends Component {\n  constructor(){\n    super();\n\n    this.state ={\n      monsters: [],\n      searchField: ''\n    };\n  }\n\ncomponentDidMount(){\n  // fetch('https://jsonplaceholder.typicode.com/users')\n  // .then(response => response.json())\n  // .then(users => this.setState({monsters : users}))\n  console.log(users)\n  this.setState({monsters : users})\n}\n\n  render(){\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLocaleLowerCase())\n      );\n\n    return(\n      <div className=\"App\">\n        <h1>Monster Rolodex</h1>\n        <SearchBox\n        placeholder='search monster'\n        handleChange={e => this.setState({searchField  : e.target.value})}\n        />\n        <CardList monsters={filteredMonsters}> \n        </CardList>\n    </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}